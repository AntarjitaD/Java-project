import java.util.Scanner;

public class ConnectFour {

    private static final int ROWS = 6;
    private static final int COLS = 7;
    private static final char EMPTY = '.';
    private static final char PLAYER1 = 'X';
    private static final char PLAYER2 = 'O';

    private char[][] board;
    private char currentPlayer;

    public ConnectFour() {
        board = new char[ROWS][COLS];
        currentPlayer = PLAYER1;
        initializeBoard();
    }

    public void initializeBoard() {
        for (int i = 0; i < ROWS; i++) {
            for (int j = 0; j < COLS; j++) {
                board[i][j] = EMPTY;
            }
        }
    }

    public void printBoard() {
        for (int i = 0; i < ROWS; i++) {
            for (int j = 0; j < COLS; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println("1 2 3 4 5 6 7"); // column numbers for reference
    }

    public boolean dropDisc(int col) {
        if (col < 1 || col > COLS || board[0][col - 1] != EMPTY) {
            System.out.println("Invalid move. Try again.");
            return false;
        }

        for (int i = ROWS - 1; i >= 0; i--) {
            if (board[i][col - 1] == EMPTY) {
                board[i][col - 1] = currentPlayer;
                return true;
            }
        }
        return false;
    }

    public boolean checkWin() {
        return checkHorizontal() || checkVertical() || checkDiagonal();
    }

    private boolean checkHorizontal() {
        for (int r = 0; r < ROWS; r++) {
            for (int c = 0; c <= COLS - 4; c++) {
                if (board[r][c] == currentPlayer &&
                    board[r][c] == board[r][c + 1] &&
                    board[r][c] == board[r][c + 2] &&
                    board[r][c] == board[r][c + 3]) {
                    return true;
                }
            }
        }
        return false;
    }

    private boolean checkVertical() {
        for (int c = 0; c < COLS; c++) {
            for (int r = 0; r <= ROWS - 4; r++) {
                if (board[r][c] == currentPlayer &&
                    board[r][c] == board[r + 1][c] &&
                    board[r][c] == board[r + 2][c] &&
                    board[r][c] == board[r + 3][c]) {
                    return true;
                }
            }
        }
        return false;
    }

    private boolean checkDiagonal() {
        // Check for diagonals from bottom-left to top-right
        for (int r = ROWS - 1; r >= 3; r--) {
            for (int c = 0; c <= COLS - 4; c++) {
                if (board[r][c] == currentPlayer &&
                    board[r][c] == board[r - 1][c + 1] &&
                    board[r][c] == board[r - 2][c + 2] &&
                    board[r][c] == board[r - 3][c + 3]) {
                    return true;
                }
            }
        }

        // Check for diagonals from top-left to bottom-right
        for (int r = 0; r <= ROWS - 4; r++) {
            for (int c = 0; c <= COLS - 4; c++) {
                if (board[r][c] == currentPlayer &&
                    board[r][c] == board[r + 1][c + 1] &&
                    board[r][c] == board[r + 2][c + 2] &&
                    board[r][c] == board[r + 3][c + 3]) {
                    return true;
                }
            }
        }

        return false;
    }

    public void switchPlayer() {
        currentPlayer = (currentPlayer == PLAYER1) ? PLAYER2 : PLAYER1;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ConnectFour game = new ConnectFour();
        boolean gameWon = false;
        boolean gameOver = false;

        System.out.println("Welcome to Connect Four!");
        game.printBoard();

        while (!gameOver) {
            System.out.print("Player " + game.currentPlayer + ", enter your column (1-7): ");
            int column = scanner.nextInt();

            if (game.dropDisc(column)) {
                game.printBoard();
                if (game.checkWin()) {
                    System.out.println("Player " + game.currentPlayer + " wins!");
                    gameWon = true;
                    gameOver = true;
                } else {
                    game.switchPlayer();
                }
            }
        }

        if (!gameWon) {
            System.out.println("The game is a draw!");
        }

        scanner.close();
    }
}
